@using GjammT.Models.CustomerRegister
@using GjammT.SharedKernel
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using Raven.Client.Documents
@using Raven.Client.Documents.Session
@using Syncfusion.Blazor.Grids
@using YourClassLibrary.RavenDB
@rendermode @(new InteractiveServerRenderMode(prerender: false));

    <InputText @bind-Value="customerName" placeholder=@ProgramInfo.Resource("CUSTOMER_NAME") />
    <input type="text" placeholder=@ProgramInfo.Resource("FIRSTNAME")/>
    <input type="text" placeholder=@ProgramInfo.Resource("LASTNAME")/>
    <button class="button" @onclick="async () => await CreateCustomer()">Skapa</button>
    <br />
    <br />

    <div class="row">
        <SfGrid DataSource="@customers" AllowPaging="true">
            <GridPageSettings PageCount="5"></GridPageSettings>
            <GridColumns>
                <GridColumn Field=@nameof(Customer.Id) HeaderText="ID" Width="120"></GridColumn>
                <GridColumn Field=@nameof(Customer.Name) HeaderText="Name" Width="150"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
    
@code {
    private readonly IDocumentStore _store = DocumentStoreHolder.Store;
    private List<Customer> customers = new();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadCustomers();
    }

    public async Task LoadCustomers()
    {
        using IAsyncDocumentSession session = _store.OpenAsyncSession() ;
        customers = await session.Query<Customer>().ToListAsync();
    }
    
    private async Task CreateCustomer()
    {
        using IAsyncDocumentSession session = _store.OpenAsyncSession();
        var customer = new Customer() { Name = customerName, Id = null };

        await session.StoreAsync(customer);
        await session.SaveChangesAsync();
        
        await LoadCustomers();
    }

    public string customerName { get; set; }
}